apiVersion: skaffold/v3
kind: Config
metadata:
  name: sample-scenario-claims-cdc-job
build:
#  insecureRegistries:
#    - localhost:5001
  local:
    push: true
  artifacts:
    - image: sample-scenario-claims-cdc-job
      #docker:
      #  dockerfile: Dockerfile
      custom:
        # environment variable $IMG2 will be set to the build of image2
        buildCommand: |
          # Option: Staged
          #docker build . -f staged.Dockerfile --tag=$IMAGE
          
          # Option: maven outside docker
          ./mvnw clean package
          docker build . -f Dockerfile --tag=$IMAGE
          docker image push $IMAGE
        dependencies:
          ignore:
            - target
deploy:
  helm:
#    flags:
#      global: [--debug]
    releases:
    - name: claims-cdc-job
      chartPath: helm
      
      #wait: true
      setValueTemplates:
        image.repository: "{{.IMAGE_REPO_sample_scenario_claims_cdc_job}}"
        image.tag: "{{.IMAGE_TAG_sample_scenario_claims_cdc_job}}@{{.IMAGE_DIGEST_sample_scenario_claims_cdc_job}}"
      setValues:
        image.pullPolicy: "IfNotPresent"
        kafka.bootstrap_servers: kafka.confluent.svc.cluster.local:9092
        kafka.schema_registry_url: http://schemaregistry.confluent.svc.cluster.local:8081
        output.topic: claims
        output.schema:
          namespace: com.github.scalvetr.claims
        mongodb.host: mongodb-0.mongodb-headless.mongodb.svc.cluster.local
        mongodb.port: 27017
        mongodb.authDatabase: claimsdb
        mongodb.database: claimsdb
        mongodb.collection: claims
        mongodb.username: user
        mongodb.password: password
