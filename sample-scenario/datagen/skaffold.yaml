apiVersion: skaffold/v2beta29
kind: Config
metadata:
  name: sample-scenario-datagen
build:
  artifacts:
    - image: sample-scenario-datagen
      context: .
      jib: {}

  tagPolicy:
    gitCommit: {}
deploy:
  helm:
#    flags:
#      global: [--debug]
    releases:
    - name: datagen
      chartPath: helm
      setValueTemplates:
        image.repository: "{{.IMAGE_REPO_sample_scenario_datagen}}"
        image.tag: "{{.IMAGE_TAG_sample_scenario_datagen}}@{{.IMAGE_DIGEST_sample_scenario_datagen}}"
      setValues:
        image.pullPolicy: "IfNotPresent"
        mongodb.claims.host: mongodb-0.mongodb-headless.mongodb.svc.cluster.local
        mongodb.claims.port: 27017
        mongodb.claims.database: claimsdb
        mongodb.claims.authenticationDatabase: claimsdb
        mongodb.claims.username: user
        mongodb.claims.password: password
        mongodb.policies.host: mongodb-0.mongodb-headless.mongodb.svc.cluster.local
        mongodb.policies.port: 27017
        mongodb.policies.database: policiesdb
        mongodb.policies.authenticationDatabase: policiesdb
        mongodb.policies.username: user
        mongodb.policies.password: password
        kafka.bootstrap_servers: kafka.confluent.svc.cluster.local:9092
        kafka.schema_registry_url: http://schemaregistry.confluent.svc.cluster.local:8081
        kafka.topics.customers.name: customers
        kafka.topics.customers.partitions: 1
        kafka.topics.customers.replicas: 1