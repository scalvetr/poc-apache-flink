mongodb:
  claims:
    host: ${CLAIMS_DB_HOST:localhost}
    port: ${CLAIMS_DB_PORT:27017}
    database: ${CLAIMS_DB_DATABASE:db}
    authenticationDatabase: ${CLAIMS_DB_AUTH_DATABASE:db}
    username: ${CLAIMS_DB_USERNAME:user}
    password: ${CLAIMS_DB_PASSWORD:password}
  policies:
    host: ${POLICIES_DB_HOST:localhost}
    port: ${POLICIES_DB_PORT:27017}
    database: ${POLICIES_DB_DATABASE:db}
    authenticationDatabase: ${POLICIES_DB_AUTH_DATABASE:db}
    username: ${POLICIES_DB_USERNAME:user}
    password: ${POLICIES_DB_PASSWORD:password}

spring:
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: ${KAFKA_SCHEMA_REGISTRY:http://localhost:8081}

app:
  kafka:
    topic: ${KAFKA_TOPIC:consumers}

logging:
  level:
    root: warn
    com.github.scalvetr.poc.flink.datagen: debug
    org.springframework.boot.docker.compose: debug
    #org.springframework.boot.autoconfigure: debug